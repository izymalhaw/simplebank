// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: accounts.sql

package sqlcs

import (
	"context"
)

const createAccount = `-- name: CreateAccount :one
INSERT INTO Account (owner,balance,currency,country_code) Values ($1 , $2, $3, $4) RETURNING id, owner, balance, currency, created_at, country_code
`

type CreateAccountParams struct {
	Owner       string
	Balance     int64
	Currency    string
	CountryCode int32
}

func (q *Queries) CreateAccount(ctx context.Context, arg CreateAccountParams) (Account, error) {
	row := q.db.QueryRowContext(ctx, createAccount,
		arg.Owner,
		arg.Balance,
		arg.Currency,
		arg.CountryCode,
	)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.Owner,
		&i.Balance,
		&i.Currency,
		&i.CreatedAt,
		&i.CountryCode,
	)
	return i, err
}

const getAccount = `-- name: GetAccount :one
SELECT id, owner, balance, currency, created_at, country_code FROM Account WHERE id = $1 LIMIT 1
`

func (q *Queries) GetAccount(ctx context.Context, id int64) (Account, error) {
	row := q.db.QueryRowContext(ctx, getAccount, id)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.Owner,
		&i.Balance,
		&i.Currency,
		&i.CreatedAt,
		&i.CountryCode,
	)
	return i, err
}
